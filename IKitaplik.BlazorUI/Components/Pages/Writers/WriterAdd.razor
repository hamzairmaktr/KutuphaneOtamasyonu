@page "/writer/add"
@inject IWriterService _service
@inject ISnackbar Snackbar
@inject NavigationManager Nav
@attribute [Authorize]


<h3 class="mt-2">Yazar Ekle</h3>
@if (!string.IsNullOrEmpty(errorMessage))
{
    <MudAlert Class="my-3" Severity="Severity.Error">@errorMessage</MudAlert>
}

<MudTextField T="string" @bind-Value="writerName" Variant="Variant.Outlined" Label="Yazar Adı"></MudTextField>
<MudDatePicker Date="@birthDate" DateChanged="@((DateTime? val) => birthDate = val)" Variant="Variant.Outlined" Label="Doğum Tarihi"></MudDatePicker>
<MudDatePicker Date="@deathDate" DateChanged="@((DateTime? val) => deathDate = val)" Variant="Variant.Outlined" Label="Ölüm Tarihi"></MudDatePicker>
<MudTextField AutoGrow @bind-Value="bio" Variant="Variant.Outlined" Lines="5" Label="Biyografi"></MudTextField>

<MudButton OnClick="Kaydet" Class="mt-2" Variant="Variant.Filled" ButtonType="ButtonType.Button" EndIcon="@Icons.Material.Filled.Add" Color="Color.Info">Yeni Kayıt Ekle</MudButton>
<MudButton OnClick="Vazgec" Class="mt-2 ms-1" Variant="Variant.Filled" ButtonType="ButtonType.Button" EndIcon="@Icons.Material.TwoTone.Cancel" Color="Color.Error">Vazgeç</MudButton>


@code {
    private string errorMessage = "";
    private string writerName = "";
    private DateTime? birthDate;
    private DateTime? deathDate = null;
    private string bio = "";

    private void Vazgec(MouseEventArgs args)
    {
        Nav.NavigateTo("writer/list");
    }
    private async Task Kaydet(MouseEventArgs args)
    {
        errorMessage = string.Empty;

        var res = await _service.AddAsync(new WriterAddDto { WriterName = writerName, Biography = bio, BirthDate = birthDate, DeathDate = deathDate });
        if (!res.Success)
        {
            errorMessage = res.Message;
            return;
        }

        Snackbar.Add(res.Message, Severity.Success);
        Nav.NavigateTo("writer/list");
    }
}
